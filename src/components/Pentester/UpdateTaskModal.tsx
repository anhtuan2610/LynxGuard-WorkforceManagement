import { useState } from "react";
import { Modal, Button, Input, Radio } from "antd";

type TUpdateTaskModalProps = {
  visible: boolean;
  onClose: () => void;
  onUpdate: (status: string, reason?: string, evidenceImage?: FileList | null) => void;
};

const UpdateTaskModal = ({
  visible,
  onClose,
  onUpdate,
}: TUpdateTaskModalProps) => {
  const [status, setStatus] = useState<string>("complete");
  const [reason, setReason] = useState<string>("");
  const [imageEvidence, setImageEvidence] = useState<FileList | null>(null);
  const [imageEvidenceString, setImageEvidenceString] = useState<string | null>(null);

  const handleStatusChange = (e: any) => {
    setStatus(e.target.value);
    if (e.target.value === "complete") {
      setReason("");
      setImageEvidence(null)
      setImageEvidenceString(null);
    } else {
      setReason("");
      setImageEvidence(null)
      setImageEvidenceString(null);
    }
  };

  const handleImageChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    const file = event.target.files?.[0];
    if (file) {
      setImageEvidence(event.target.files);
      const reader = new FileReader();
      reader.onload = () => {
        setImageEvidenceString(reader.result as string); // Lưu URL của ảnh
      };
      reader.readAsDataURL(file); // Đọc file dưới dạng URL
    }
  };

  const handleUpdate = () => {
    onUpdate(status, reason, imageEvidence);
    onClose();
  };

  const isFormValid = !!(reason.trim()); // false thì là được update , để dấu !! đằng trc để chuyển thành kiểu bool

  return (
    <Modal
      visible={visible}
      title="Update Task Status"
      onCancel={onClose}
      footer={null}
      centered
    >
      <div className="flex flex-col gap-4">
        <h2>Select Status</h2>
        <Radio.Group onChange={handleStatusChange} value={status}>
          <Radio value="complete">Complete</Radio>
          <Radio value="ignore">Ignore</Radio>
        </Radio.Group>

        {status === "complete" && (
          <div>
            <h3>Enter about description</h3>
            <Input.TextArea
              placeholder="Enter about description"
              value={reason}
              onChange={(e) => setReason(e.target.value)}
              rows={4}
            />
            <div className="p-4">
              <h3 className="mb-2">Upload Image</h3>
              <input
                type="file"
                accept="image/*"
                onChange={handleImageChange}
                className="mb-4"
              />
              {imageEvidenceString && (
                <div className="flex justify-center">
                  <img
                    src={imageEvidenceString}
                    alt="Uploaded preview"
                    className="w-2/3 h-2/3 object-cover rounded-md max-h-[300px] max-w-[300px]"
                  />
                </div>
              )}
            </div>
          </div>
        )}

        {status === "ignore" && (
          <div>
            <h3>Reason for Ignore</h3>
            <Input.TextArea
              placeholder="Enter reason for ignore"
              value={reason}
              onChange={(e) => setReason(e.target.value)}
              rows={4}
            />
            <div className="p-4">
              <h3 className="mb-2">Upload Image</h3>
              <input
                type="file"
                accept="image/*"
                onChange={handleImageChange}
                className="mb-4"
              />
              {imageEvidenceString && (
                <div className="flex justify-center">
                  <img
                    src={imageEvidenceString}
                    alt="Uploaded preview"
                    className="w-2/3 h-2/3 object-cover rounded-md max-h-[300px] max-w-[300px]"
                  />
                </div>
              )}
            </div>
          </div>
        )}

        <div className="flex justify-end gap-2">
          <Button onClick={onClose}>Cancel</Button>
          <Button type="primary" onClick={handleUpdate} disabled={!isFormValid}>
            Update
          </Button>
        </div>
      </div>
    </Modal>
  );
};

export default UpdateTaskModal;
